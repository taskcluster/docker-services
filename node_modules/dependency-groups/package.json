{
  "name": "dependency-groups",
  "version": "0.1.1",
  "description": "Convert a list of dependencies into groups",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "url": "https://github.com/lightsofapollo/dependency_groups",
    "type": "git"
  },
  "keywords": [
    "dependencies",
    "dependency",
    "group",
    "graph",
    "parallel"
  ],
  "author": {
    "name": "James Lal [:lightsofapollo]"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.17.1"
  },
  "readme": "# dependency-groups\n\nDependency groups is useful when you have a list of interrelated items\nthat need to be actioned on in the correct order (package managers are a\ndecent parallel).\n\n## Features\n\n  - cyclic dependencies throw errors\n  - no duplicates in the final group\n  - depth first ordering of services make it easy to action on groups\n\n## Usage\n\n```js\nvar group = require('dependency-groups');\n\n// Imagine you have this list of services. The service can have many\n// different dependencies (and dependencies can have dependencies,\n// etc...) the goal is to launch them in the correct order and in\n// parallel as much as possible.\nvar services = {\n  worker: ['queue'],\n  appworker: ['worker'],\n  app: ['db', 'queue'],\n  db: ['monit', 'xvfb'],\n  queue: ['monit', 'amqp'],\n  monit: [],\n  xvfb: ['monit'],\n  amqp: []\n};\n\n// group them together so you can take some action on each group\nvar launchGroups = group(services);\n\n// the above will give you this list of groups\nlaunchGroups = [\n  ['monit', 'amqp'],\n  ['queue', 'xvfb'],\n  ['worker', 'db'],\n  ['appworker', 'app']\n];\n\n// selectively group only some items\nvar workerGroups = group(services, ['worker']);\nworkerGroups = [\n  ['monit', 'amqp'],\n  ['queue'],\n  ['worker']\n];\n```\n\n## LICENSE\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Sahaja James Lal\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lightsofapollo/dependency_groups/issues"
  },
  "_id": "dependency-groups@0.1.1",
  "_from": "dependency-groups@~0.1.0"
}
