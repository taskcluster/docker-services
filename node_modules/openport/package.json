{
  "name": "openport",
  "description": "Finds open network ports.",
  "author": {
    "name": "Joe Ferner",
    "email": "joe.ferner@nearinfinity.com"
  },
  "keywords": [
    "port",
    "network",
    "open"
  ],
  "version": "0.0.3",
  "engines": {
    "node": ">=0.6.0"
  },
  "maintainers": [
    {
      "name": "Joe Ferner",
      "email": "joe.ferner@nearinfinity.com"
    }
  ],
  "devDependencies": {
    "nodeunit": "0.7.3"
  },
  "bugs": {
    "url": "https://github.com/nearinfinity/node-openport/issues"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nearinfinity/node-openport.git"
  },
  "main": "./openport.js",
  "readme": "# openport\n\nFinds open network ports.\n\n## Installation\n\n```bash\n$ npm install openport\n```\n\n## Quick Examples\n\n```javascript\nvar op = require('openport');\n\n// find an open port\nop.find(function(err, port) {\n  if(err) { console.log(err); return; }\n  // yea! we have an open port.\n});\n\n// find two open ports, choosing from 1024, 1025, 1026, 1028\nop.find(\n  {\n    ports: [ 1024, 1025, 1026, 1028 ],\n    count: 2\n  }\n  function(err, ports) {\n    if(err) { console.log(err); return; }\n    // yea! we have two open ports.\n  }\n);\n\n// find an open port between 1024 and 2000, but not 1025 or 1500\nop.find(\n  {\n    startingPort: 1024,\n    endingPort: 2000,\n    avoid: [ 1025, 1500 ]\n  }\n  function(err, port) {\n    if(err) { console.log(err); return; }\n    // yea! we have an open port between 1024 and 2000, but not port 1025 or 1500.\n  }\n);\n\n// create 2 http servers\nop.find(\n  {\n    count: 2,\n    createServer: function (port, callback) {\n      var server = http.createServer(function (req, res) {\n      });\n      server.port = port; // save it for later\n      server.once('error', function (ex) {\n        callback(ex);\n      });\n      server.listen(port, function () {\n        callback(null, server);\n      });\n    }\n  }, function (err, servers) {\n    if(err) { console.log(err); return; }\n    // yea! we have two web servers.\n  }\n);\n```\n\n# API Documentation\n\n### openport.find([options], callback)\n\nFinds open network ports\n\n__Arguments__\n\n * options - (optional) - Find options\n  * startingPort - The port to start searching for an open port (default: 1024).\n  * endingPort - The port to stop searching for an open port (default: 65535).\n  * ports - An array of ports to search.\n  * count - The number of open ports to find.\n  * avoid - An array of ports to avoid.\n  * createServer - A function that will try to open a server listening on the given port. Use this when you want to make sure nobody steals your ports in between calls.\n * callback(err, port/ports/servers) - Callback to be called when we have found the open ports.\n",
  "readmeFilename": "README.md",
  "_id": "openport@0.0.3",
  "dist": {
    "shasum": "c754dea21a062a94c8146f183f0cea991358b847"
  },
  "_from": "openport@",
  "_resolved": "https://registry.npmjs.org/openport/-/openport-0.0.3.tgz"
}
